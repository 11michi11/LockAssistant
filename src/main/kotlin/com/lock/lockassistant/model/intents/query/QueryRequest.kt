/*
 * QueryRequest.kt
 *
 * This code was generated by json-kotlin-schema-codegen - JSON Schema Code Generator
 * See https://github.com/pwall567/json-kotlin-schema-codegen
 *
 * It is not advisable to modify generated code as any modifications will be lost
 * when the generation process is re-run.
 */
package com.lock.lockassistant.model.intents.query

import java.util.UUID

/**
 * This intent queries for the current states of devices. It is used for queries where truly real-time accuracy is required (for example, the status of a door lock). Only states are returned when action.devices.QUERY is triggered. To update the properties or traits or other persistent elements of the device, action.devices.SYNC is used.
 */
data class QueryRequest(
    /** ID of the request. */
    val requestId: UUID,
    /** List of inputs matching the intent request. */
    val inputs: List<Input>
) {

    /**
     * Type and payload associated with the intent request.
     */
    data class Input(
        /** Intent request type. */
        val intent: String,
        /** QUERY request payload. */
        val payload: Payload
    ) {

        init {
            require(intent == cg_str0) { "intent not constant value $cg_str0 - $intent" }
        }

    }

    /**
     * QUERY request payload.
     */
    data class Payload(
        /** List of target devices. */
        val devices: List<Device>
    )

    /**
     * Device targets to query.
     */
    data class Device(
        /** Device ID, as per the ID provided in SYNC. */
        val id: String,
        /** If the opaque customData object is provided in SYNC, it's sent here. */
        val customData: CustomData? = null
    )

    /**
     * If the opaque customData object is provided in SYNC, it's sent here.
     */
    open class CustomData

    companion object {
        private const val cg_str0 = "action.devices.QUERY"
    }

}
